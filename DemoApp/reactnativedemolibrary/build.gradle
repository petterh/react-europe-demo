apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            manifestPlaceholders = [isDebug:true]
        }
        release {
            manifestPlaceholders = [isDebug:false]
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

allprojects {
    repositories {
        maven {
            // All of React Native (JS, Android binaries) is installed from npm.
            // This is the approach generated by react-native init, and the one described here:
            // https://facebook.github.io/react-native/docs/integration-with-existing-apps.html
            // The module 'reactnativedemolibrary' uses this approach.
            url "$rootDir/reactnativedemolibrary/node_modules/react-native/android"
        }
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

// http://stackoverflow.com/questions/34872382/manually-adding-aar-with-dependency-pom-iml-file
publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.contoso.react'
            artifactId 'reactnativedemolibrary'
            version '0.5.0'
            artifact(sourceJar)
            artifact "$buildDir/outputs/aar/reactnativedemolibrary-release.aar"

            // Generate pom nodes for dependencies
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each { dependency ->
                    if (dependency.group) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dependency.group)
                        dependencyNode.appendNode('artifactId', dependency.name)
                        dependencyNode.appendNode('version', dependency.version)
                    }
                }
            }
        }
    }

    // Publish to Artifacts/maven
    repositories{
        maven {
            url "$rootDir/../Artifacts/maven"
        }
    }
}

// Generate javadoc: http://stackoverflow.com/questions/17033878/generate-javadocs-with-android-gradle-plugin
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("../javadoc/")
    failOnError false
}

// Copy the react-native maven pom to Artifacts (invoked from create-artifacts.cmd)
task copyReactNativeTask(type: Copy) {
    from "$rootDir/reactnativedemolibrary/node_modules/react-native/android"
    into "$rootDir/../Artifacts/maven"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation "com.facebook.react:react-native:0.58.6"

    testImplementation 'junit:junit:4.12'
}
